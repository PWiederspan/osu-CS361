{"ast":null,"code":"var _jsxFileName = \"/Users/peytonwiederspan/CS361/Garden_Partner/garden-ui/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport PlantList from '../components/plant_list';\nimport { useHistory } from 'react-router-dom';\nimport * as http from 'http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  setPlantToEdit\n}) {\n  _s();\n\n  const [plants, setPlant] = useState([]);\n  const history = useHistory();\n  const [location, setLocation] = useState([]);\n  const [temp, setTemp] = useState([]);\n\n  const onDelete = async _id => {\n    const response = await fetch(`/plants/${_id}`, {\n      method: 'DELETE'\n    });\n\n    if (response.status === 204) {\n      setPlant(plants.filter(m => m._id !== _id));\n    } else {\n      console.error(`Failed to delete plant with _id = ${_id}, status code = ${response.status}`);\n    }\n  };\n\n  const onUpdate = async location => {\n    http.get('http://v4.ipv6-test.com/api/myip.php', resp => {\n      // A chunk of data has been received.\n      resp.on('ip_address', chunk => {\n        ip_address += chunk;\n        console.log(ip_address);\n      }); // The whole response has been received. Print out the result.\n\n      resp.on('end', () => {\n        console.log(ip_address);\n        return ip_address;\n      });\n    }).on(\"error\", err => {\n      console.log(\"Error: \" + err.message);\n    });\n  };\n\n  const onEdit = plant => {\n    setPlantToEdit(plant);\n    history.push(\"/edit-plant\");\n  };\n\n  const loadPlant = async () => {\n    const response = await fetch('/plants');\n    const data = await response.json();\n    setPlant(data);\n  };\n\n  useEffect(() => {\n    loadPlant();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Plants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"My Location: \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter location here\",\n      value: temp,\n      onChange: e => setTemp(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => onUpdate(),\n      children: \"Update Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(PlantList, {\n      plants: plants,\n      onDelete: onDelete,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"dDJVMYFZF+utuVH3AAJ2VTWyzxw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/peytonwiederspan/CS361/Garden_Partner/garden-ui/src/pages/home.js"],"names":["React","useState","useEffect","Link","PlantList","useHistory","http","Home","setPlantToEdit","plants","setPlant","history","location","setLocation","temp","setTemp","onDelete","_id","response","fetch","method","status","filter","m","console","error","onUpdate","get","resp","on","chunk","ip_address","log","err","message","onEdit","plant","push","loadPlant","data","json","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css'\nimport { Link } from 'react-router-dom';\nimport PlantList from '../components/plant_list';\nimport { useHistory } from 'react-router-dom';\nimport * as http from 'http';\n\nfunction Home({setPlantToEdit}) {\n      const [plants, setPlant] = useState([]);\n      const history = useHistory();\n      const [location, setLocation] = useState([]);\n      const [temp, setTemp] = useState([]);\n\n\n      const onDelete = async _id => {\n        const response = await fetch(`/plants/${_id}`, { method: 'DELETE' });\n        if (response.status === 204) {\n            setPlant(plants.filter(m => m._id !== _id));\n        } else {\n            console.error(`Failed to delete plant with _id = ${_id}, status code = ${response.status}`);\n        }\n    };\n\n    const onUpdate = async location =>{\n      http.get('http://v4.ipv6-test.com/api/myip.php', (resp) => {\n\n        // A chunk of data has been received.\n        resp.on('ip_address', (chunk) => {\n          ip_address += chunk;\n          console.log(ip_address);\n        });\n\n        // The whole response has been received. Print out the result.\n        resp.on('end', () => {\n          console.log(ip_address);\n          return ip_address\n        });\n\n      }).on(\"error\", (err) => {\n        console.log(\"Error: \" + err.message);\n      });\n\n    };\n\n      const onEdit = plant => {\n          setPlantToEdit(plant);\n          history.push(\"/edit-plant\");\n      }\n\n      const loadPlant = async () => {\n          const response = await fetch('/plants');\n          const data = await response.json();\n          setPlant(data);\n      }\n\n      useEffect(() => {\n          loadPlant();\n      }, []);\n\n      return (\n          <>\n              <h2>List of Plants</h2>\n              <h3>My Location: {location}</h3>\n              <input\n               type=\"text\"\n               placeholder=\"Enter location here\"\n               value={temp}\n               onChange={e => setTemp(e.target.value)}/>\n               <button onClick={e => onUpdate()}>Update Location</button>\n              <PlantList plants={plants}onDelete={onDelete}onEdit={onEdit}></PlantList>\n\n          </>\n      );\n  }\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}