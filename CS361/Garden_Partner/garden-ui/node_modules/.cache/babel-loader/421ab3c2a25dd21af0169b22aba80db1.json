{"ast":null,"code":"var _jsxFileName = \"/Users/peytonwiederspan/CS361/Garden_Partner/garden-ui/src/pages/search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlantMenu from '../components/plant_menu';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search({\n  navigation\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [plants, setPlant] = useState([]);\n\n  const loadPlant = async () => {\n    const response = await fetch(`/plants`);\n    const data = await response.json();\n    setPlant(data);\n  };\n\n  useEffect(() => {\n    loadPlant();\n  }, []);\n  let names = plants.map(plant => plant.Name);\n  const listPlants = names.map(plantName => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: plantName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plant Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type plant name...\",\n      onChangeText: val => setName(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: name => loadPlant(name),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listPlants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"AR8oII2No8OyNvfKXP5i16hZzkg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/peytonwiederspan/CS361/Garden_Partner/garden-ui/src/pages/search.js"],"names":["React","useState","useEffect","Link","PlantMenu","Search","navigation","name","setName","plants","setPlant","loadPlant","response","fetch","data","json","names","map","plant","Name","listPlants","plantName","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,YAAP;;;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,QAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,SAAF,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIK,KAAK,GAAGP,MAAM,CAACQ,GAAP,CAAWC,KAAK,IAAIA,KAAK,CAACC,IAA1B,CAAZ;AAGA,QAAMC,UAAU,GAAGJ,KAAK,CAACC,GAAN,CAAWI,SAAD,iBAC3B;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADiB,CAAnB;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,WAAW,EAAC,oBADZ;AAEA,MAAA,YAAY,EAAGC,GAAD,IAASd,OAAO,CAACc,GAAD;AAF9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAGf,IAAD,IAAUI,SAAS,CAACJ,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAKa;AAAL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAhCQf,M;;KAAAA,M;AAkCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlantMenu from '../components/plant_menu';\nimport '../App.css'\n\nfunction Search({navigation}) {\n  const [name, setName] = useState(\"\");\n  const [plants, setPlant] = useState([]);\n\n  const loadPlant = async () => {\n      const response = await fetch(`/plants`);\n      const data = await response.json();\n      setPlant(data);\n  };\n\n  useEffect(() => {\n      loadPlant();\n  }, []);\n\n  let names = plants.map(plant => plant.Name);\n\n\n  const listPlants = names.map((plantName) =>\n    <li>{plantName}</li>\n  );\n\n\n  return (\n    <>\n      <h1>Plant Search</h1>\n      <input type=\"text\"\n      placeholder='Type plant name...'\n      onChangeText={(val) => setName(val)}/>\n      <button onClick={(name) => loadPlant(name)}>Search</button>\n      <ul>{listPlants}</ul>\n    </>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}